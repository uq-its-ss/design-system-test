name: Publish NPM

on:
  push:
    branches:
      - main
      - releases

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.event.head_commit.message, 'chore(release):Publish') }}
    steps:
      - name: "‚¨áÔ∏è Checkout repo"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.TEST_TOKEN }}

      - name: "‚éî Setup node 18"
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: "üì¶Ô∏è Install dependencies"
        run: npm install

      - name: "üîê Authenticate to NPM"
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"  >> ~/.npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: "üßê Version dry run"
        if: ${{ github.ref_name == 'releases' }}
        env:
          GH_TOKEN: ${{ secrets.TEST_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"          
          npx lerna version --conventional-commits --conventional-graduate --yes --no-git-tag-version --no-push || true
          echo "### GIT LOG TRIGGERED BY PUSH ###"
          git --no-pager log ${{ github.event.before }}..${{ github.sha }} -n 5
          echo "### GIT LOG FORMATTED ###"
          git log -n 5 --pretty=format:"%Cred%h%Creset - %C(yellow)%an%Creset, %ar : %s"
          echo "### GIT LOG FIVE COMMITS ###"
          git --no-pager log -n 5
          echo "### GIT STATUS ###"
          git status
          echo "### GIT DIFF ###"
          git diff

      - name: "‚åõÔ∏è Wait for approval"
        uses: trstringer/manual-approval@v1
        if: ${{ github.ref_name == 'releases' }}
        with:
          secret: ${{ secrets.TEST_TOKEN }}
          approvers: uqds-admin
          minimum-approvals: 1
          issue-title: 'Approve new release ‚úÖ'
          issue-body: >
            Please approve or deny the release of a new release.
            [View the workflow output](https://github.com/uq-its-ss/design-system-test/actions/runs/${{ github.run_number }}) to confirm the version is as expected.

          exclude-workflow-initiator-as-approver: false

      - name: "‚ú® Publish stable"
        if: ${{ github.ref_name == 'releases' }}
        env:
          GH_TOKEN: ${{ secrets.TEST_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Uncommitted changes cleared."
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          npx lerna publish --conventional-commits --conventional-graduate --yes
          echo "### GIT LOG TRIGGERED BY PUSH ###"
          git --no-pager log ${{ github.event.before }}..${{ github.sha }} -n 5
          echo "### GIT LOG FORMATTED ###"
          git log -n 5 --pretty=format:"%Cred%h%Creset - %C(yellow)%an%Creset, %ar : %s"
          echo "### GIT LOG FIVE COMMITS ###"
          git --no-pager log -n 5
          echo "### GIT STATUS ###"
          git status
          echo "### GIT DIFF ###"
          git diff

      - name: "üê£ Publish alpha"
        if: ${{ github.ref_name == 'main' }}
        env:
          GH_TOKEN: ${{ secrets.TEST_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          npx lerna publish --conventional-commits --conventional-prerelease --dist-tag alpha --yes
          echo "### GIT LOG TRIGGERED BY PUSH ###"
          git --no-pager log ${{ github.event.before }}..${{ github.sha }} -n 5
          echo "### GIT LOG FORMATTED ###"
          git log -n 5 --pretty=format:"%Cred%h%Creset - %C(yellow)%an%Creset, %ar : %s"
          echo "### GIT LOG FIVE COMMITS ###"
          git --no-pager log -n 5
          echo "### GIT STATUS ###"
          git status
          echo "### GIT DIFF ###"
          git diff
